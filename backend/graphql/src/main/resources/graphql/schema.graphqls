type Query {
    image(id: ID!): ImageOutput

    course(id: ID!): CourseOutput
    courses(query: PageQuery): CourseOutputConnection

    cuisine(id: ID!): CuisineOutput
    cuisines(query: PageQuery): CuisineOutputConnection

    serving(id: ID!): ServingOutput
    servings(query: PageQuery): ServingOutputConnection

    dish(id: ID!): DishOutput
    dishes(query: PageQuery): DishOutputConnection
}

type Mutation {
    createImage(creation: ImageCreation!): ImageOutput
    deleteImage(id: ID!): Boolean

    createCourse(creation: CourseCreation): CourseOutput
    deleteCourse(id: ID!): Boolean

    createCuisine(creation: CuisineCreation): CourseOutput
    deleteCuisine(id: ID!): Boolean

    createServing(creation: ServingCreation): CourseOutput
    deleteServing(id: ID!): Boolean

    createDish(creation: DishCreation): CourseOutput
    deleteDish(id: ID!): Boolean
}

interface LocalizedModel {
    id: ID!
    locale: String!
}

interface Connection {
    edges: [Edge!]!
    pageInfo: PageInfo
}

interface Edge {
    node: LocalizedModel!
    cursor: String
}

input PageQuery {
    first: Int
    from: String
}

type Page {
    index: Int
    size: Int
    totalPages: Int
    isLast: Boolean
}

type PageInfo {
    startCursor: String
    endCursor: String
    hasPreviousPage: Boolean
    hasNextPage: Boolean
}

type ImageOutput {
    id: ID!
    url: String!
    description: String!
}

input ImageCreation {
    locale: String!
    url: String!
    description: String!
}

type CourseOutput implements LocalizedModel {
    id: ID!
    locale: String!
    name: String!
}

type CourseOutputEdge implements Edge {
    node: CourseOutput!
    cursor: String
}

type CourseOutputConnection implements Connection {
    edges: [CourseOutputEdge!]!
    pageInfo: PageInfo
}

input CourseCreation {
    locale: String!
    name: String!
}

type CuisineOutput implements LocalizedModel {
    id: ID!
    locale: String!
    name: String!
}

type CuisineOutputEdge implements Edge {
    node: CuisineOutput!
    cursor: String
}

type CuisineOutputConnection implements Connection {
    edges: [CuisineOutputEdge!]!
    pageInfo: PageInfo
}

input CuisineCreation {
    locale: String!
    name: String!
}

type ServingOutput implements LocalizedModel {
    id: ID!
    locale: String!
    name: String!
    temperatureMin: Float
    temperatureMax: Float
}

type ServingOutputEdge implements Edge {
    node: ServingOutput!
    cursor: String
}

type ServingOutputConnection implements Connection {
    edges: [ServingOutputEdge!]!
    pageInfo: PageInfo
}

input ServingCreation {
    locale: String!
    name: String!
    lowerTemperature: Float
    upperTemperature: Float
}

type DishOutput implements LocalizedModel {
    id: ID!
    locale: String!
    name: String!
    course: CourseOutput!
    cuisine: CuisineOutput!
    serving: ServingOutput!
    images: [String]
    sideDishes: [DishOutput]
}

type DishOutputEdge implements Edge {
    node: DishOutput!
    cursor: String
}

type DishOutputConnection implements Connection {
    edges: [DishOutputEdge!]!
    pageInfo: PageInfo
}

input DishCreation {
    locale: String!
    name: String!
    courseId: String!
    cuisineId: String!
    servingId: String!
    images: [String!]
    sideDishes: [String!]
}


